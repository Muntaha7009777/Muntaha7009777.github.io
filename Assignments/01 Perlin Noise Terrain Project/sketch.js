// Perlin Noise Terrain
// Muntaha Chowdhury
// Oct 1, 2024
// A terrain generated by Noise that  | has a flag at the peak | displays red line at average height | pans | can have its width changed

let timeAtTerrain;
let ADVANCE_TIMEBY = 0.01;

let terWidth = 5;
let heightAvg;
let divideAvg;
let avg;

let tallestY = 0;
let tallestX = 0;




function setup() {
  // setup program
  createCanvas(windowWidth, windowHeight);
}

function draw() {
  // function sequencer
  background(220);
  generateTerrain();
  timeAtTerrain = frameCount/100; //for panning effect [changes starting x-value (for time) every frame]
}





function generateTerrain() {
  // draws terrain + finds highest height + finds avg height

  // setup + initialize
  stroke(0);
  fill(100);
  tallestY = 0;
  heightAvg = 0;
  divideAvg = 0;

  for (let block = 0; block < width; block+=terWidth) {

    // draws terrain
    let terHeight = noise(timeAtTerrain);
    terHeight = map(terHeight, 0, 1, 10, height*2/3);
    rect(block, height, terWidth, -terHeight);

    // updates tallest peak
    if (terHeight > tallestY)  {
      tallestY = terHeight;
      tallestX = block;
    }

    // Updates variables [for noise() graph & averages]
    timeAtTerrain += ADVANCE_TIMEBY;
    heightAvg +=terHeight;
    divideAvg++

  }

  // show highest and avg
  drawFlag(tallestX, tallestY);
  avg = heightAvg / divideAvg;
  drawAvg(height-avg);
}



function drawFlag(x, y) {
  // draws flag at the highest peak
  strokeWeight(3);
  line(x, height-y, x, height-(y+30));
  fill(100);
  triangle(x, height-(y+30), x, height-(y+20), x+10, height-(y+25));
}

function drawAvg(y) {
  // draw a line at the average height
  stroke(255, 0, 0);
  line(0, y, width, y);
  stroke(0);
  strokeWeight(1);
}




function keyPressed() {
  // changes width of rectangle (for terrain)
  if (keyCode === RIGHT_ARROW) terWidth += 2;
  if (keyCode === LEFT_ARROW) terWidth -=2;
  if (terWidth < 1) terWidth = 1;
  if (terWidth > 20) terWidth = 20;
}